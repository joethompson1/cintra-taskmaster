name: Build and Push

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
    branches:
      - main

env:
  AWS_REGION: ${{ vars.AWS_DEFAULT_REGION || 'us-east-1' }}
  ECR_REPOSITORY: cintra-taskmaster

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
      image-uri: ${{ steps.image-uri.outputs.uri }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          role-session-name: github-actions-cintra-taskmaster-build
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image URI
        id: image-uri
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}"
          echo "uri=$IMAGE_URI" >> $GITHUB_OUTPUT
          echo "Built and pushed image: $IMAGE_URI"

      - name: Create build artifact
        run: |
          mkdir -p build-info
          echo "${{ steps.image-uri.outputs.uri }}" > build-info/image-uri.txt
          echo "${{ github.sha }}" > build-info/commit-sha.txt
          echo "${{ github.run_id }}" > build-info/build-id.txt

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-info-${{ github.sha }}
          path: build-info/
          retention-days: 30 